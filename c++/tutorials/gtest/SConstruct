srcDir = 'src'
objDir = 'obj'

googletestDir = 'googletest'
googletestSubdir = googletestDir + '/googletest'
googlemockSubdir = googletestDir + '/googlemock'

VariantDir(objDir, srcDir)

def getObjects(sourceFiles):
    objects = []
    for sourceFile in sourceFiles:
        objects.extend(Object(objDir + '/' + sourceFile
                              , CXXFLAGS='-std=c++11'
                              , CPPPATH=[srcDir + '/' + googletestSubdir + '/include'
                                         , srcDir + '/' + googletestSubdir
                                         , srcDir + '/' + googlemockSubdir + '/include'
                                         , srcDir + '/' + googlemockSubdir
                                        ]
                             )
                      )
    return objects

googletestSourceFiles = ['gtest-all.cc'
                        ]
googletestSourcePaths = map(lambda x: googletestSubdir + '/src/' + x, googletestSourceFiles)
googletestObjects = getObjects(googletestSourcePaths)
googlemockSourceFiles = ['gmock-all.cc'
                         , 'gmock_main.cc'
                        ]
googlemockSourcePaths = map(lambda x: googlemockSubdir + '/src/' + x, googlemockSourceFiles)
googlemockObjects = getObjects(googlemockSourcePaths)

sample1SourceFiles = ['sample1_unittest.cc'
                      , 'sample1.cc'
                     ]
sample1SourcePaths = map(lambda x: googletestSubdir + '/samples/' + x, sample1SourceFiles)
sample1Objects = getObjects(sample1SourcePaths)


sample1Program = Program(sample1Objects + googletestObjects + googlemockObjects)

knudsSample1SourceFiles = ['knudsSampleUnittest.cpp','KnudsSampleCut.cpp']
knudsSample1SourcePaths = map(lambda x: 'knuds_samples/sample1/' + x, knudsSample1SourceFiles)
knudsSample1Objects = getObjects(knudsSample1SourcePaths)
knudsSample1Program = Program(knudsSample1Objects + googletestObjects + googlemockObjects)
